{
  "name": "Box",
  "object_type": "MESH",
  "position": [0, 0, 0],
  "transform": {
    "translation": [0, 0, 0],
    "rotation": [0, 0, 0],
    "scale": [1, 1, 1]
  },
  "children": [],
  "geometry": {
    "geometry_type": "HOLLOW_BOX",
    "attributes": {
      "position": {
        "data": [
          100, 100, 100, 50, -50, 100, 100, -100, 100, 50, 50, 100, -50, 50,
          100, -100, 100, 100, -100, -100, 100, -50, -50, 100, 100, -100, -100,
          50, 50, -100, 100, 100, -100, 50, -50, -100, -100, 100, -100, -50, 50,
          -100, -100, -100, -100, -50, -50, -100
        ],
        "size": 3,
        "options": {
          "dtype": 5126,
          "normalize": false,
          "stride": 0,
          "offset": 0
        }
      },
      "indices": {
        "data": [
          0, 1, 2, 0, 3, 1, 0, 4, 3, 0, 5, 4, 5, 6, 4, 6, 7, 4, 7, 6, 1, 6, 2,
          1, 8, 9, 10, 8, 11, 9, 10, 9, 12, 9, 13, 12, 12, 13, 14, 13, 15, 14,
          11, 8, 15, 8, 14, 15, 5, 14, 6, 5, 12, 14, 3, 9, 1, 9, 11, 1, 2, 8, 0,
          8, 10, 0, 4, 7, 13, 7, 15, 13, 2, 6, 8, 6, 14, 8, 4, 13, 3, 13, 9, 3,
          5, 0, 12, 0, 10, 12, 7, 1, 15, 1, 11, 15
        ],
        "size": -1,
        "options": {
          "dtype": 5126,
          "normalize": false,
          "stride": 0,
          "offset": 0
        }
      }
    },
    "size": 5
  },
  "material": {
    "id": "M0",
    "vertex_shader": "attribute vec4 a_color;\r\nattribute vec4 a_position;\r\n\r\nuniform mat4 u_ViewProjMat;\r\nuniform mat4 u_WorldMat;\r\n\r\n\r\nvarying vec4 v_Color;\r\n\r\nvoid main(void) {\r\n  gl_Position = u_ViewProjMat * u_WorldMat * a_position;\r\n\r\n  v_Color = a_color;\r\n}\r\n",
    "fragment_shader": "precision highp float;\r\n\r\n// Light Model\r\nuniform vec3 u_ambientColor;\r\n\r\n// Fragment Vertex Shader\r\nvarying vec4 v_Color;\r\n\r\nvoid main(void) {\r\n  vec3 color = u_ambientColor * v_Color.rgb;\r\n  gl_FragColor = vec4(color, v_Color.a);\r\n}\r\n",
    "uniforms": {},
    "color": [1, 0, 0, 1],
    "type": "BASIC_MATERIAL"
  }
}
