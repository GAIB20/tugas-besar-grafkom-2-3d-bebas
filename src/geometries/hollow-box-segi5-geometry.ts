import { BufferAttribute } from "./buffer-attribute.ts";
import { BufferGeometry } from "./buffer-geometry.ts";

export class HollowGeometry5 extends BufferGeometry {
  width: number;
  height: number;
  depth: number;

  // TODO: need to check
  constructor(width = 1, height = 1 , depth = 1) {
    super();
    this.width = width;
    this.height = height;
    this.depth = depth;

    const vertices = new Float32Array([
        50, 0, 0, 15.45, 47.55, 0, 50, 0, 100, 15.45, 47.55, 0, 15.45, 47.55, 100, 50, 0, 100, 15.45, 47.55, 0, -40.45, 29.4, 0, 15.45, 47.55, 100, -40.45, 29.4, 0, -40.45, 29.4, 100, 15.45, 47.55, 100, -40.45, 29.4, 0, -40.45, -29.4, 0, -40.45, 29.4, 100, -40.45, -29.4, 0, -40.45, -29.4, 100, -40.45, 29.4, 100, -40.45, -29.4, 0, 15.45, -47.55, 0, -40.45, -29.4, 100, 15.45, -47.55, 0, 15.45, -47.55, 100, -40.45, -29.4, 100, 15.45, -47.55, 0, 50, 0, 0, 15.45, -47.55, 100, 50, 0, 0, 50, 0, 100, 15.45, -47.55, 100, 50, 0, 0, 15.45, 47.55, 0, 50, 0, 100, 15.45, 47.55, 0, 15.45, 47.55, 100, 50, 0, 100, 15.45, 47.55, 0, -40.45, 29.4, 0, 15.45, 47.55, 100, -40.45, 29.4, 0, -40.45, 29.4, 100, 15.45, 47.55, 100, -40.45, 29.4, 0, -40.45, -29.4, 0, -40.45, 29.4, 100, -40.45, -29.4, 0, -40.45, -29.4, 100, -40.45, 29.4, 100, -40.45, -29.4, 0, 15.45, -47.55, 0, -40.45, -29.4, 100, 15.45, -47.55, 0, 15.45, -47.55, 100, -40.45, -29.4, 100, 15.45, -47.55, 0, 50, 0, 0, 15.45, -47.55, 100, 50, 0, 0, 50, 0, 100, 15.45, -47.55, 100, 50, 0, 100, 15.45, 47.55, 100, 50, 0, 0, 15.45, 47.55, 100, 15.45, 47.55, 0, 50, 0, 0, 15.45, 47.55, 100, -40.45, 29.4, 100, 15.45, 47.55, 0, -40.45, 29.4, 100, -40.45, 29.4, 0, 15.45, 47.55, 0, -40.45, 29.4, 100, -40.45, -29.4, 100, -40.45, 29.4, 0, -40.45, -29.4, 100, -40.45, -29.4, 0, -40.45, 29.4, 0, -40.45, -29.4, 100, 15.45, -47.55, 100, -40.45, -29.4, 0, 15.45, -47.55, 100, 15.45, -47.55, 0, -40.45, -29.4, 0, 15.45, -47.55, 100, 50, 0, 100, 15.45, -47.55, 0, 50, 0, 100, 50, 0, 0, 15.45, -47.55, 0, 50, 0, 0, 25.0, 0, 0, 15.45, 47.55, 0, 15.45, 47.55, 0, 25.0, 0, 0, 7.725, 23.775, 0, 15.45, 47.55, 0, 7.725, 23.775, 0, -40.45, 29.4, 0, -40.45, 29.4, 0, 7.725, 23.775, 0, -20.225, 14.7, 0, -40.45, 29.4, 0, -20.225, 14.7, 0, -40.45, -29.4, 0, -40.45, -29.4, 0, -20.225, 14.7, 0, -20.225, -14.7, 0, -40.45, -29.4, 0, -20.225, -14.7, 0, 15.45, -47.55, 0, 15.45, -47.55, 0, -20.225, -14.7, 0, 7.725, -23.775, 0, 15.45, -47.55, 0, 7.725, -23.775, 0, 50, 0, 0, 50, 0, 0, 7.725, -23.775, 0, 25.0, 0, 0, 15.45, 47.55, 100, 25.0, 0, 100, 50, 0, 100, 7.725, 23.775, 100, 25.0, 0, 100, 15.45, 47.55, 100, -40.45, 29.4, 100, 7.725, 23.775, 100, 15.45, 47.55, 100, -20.225, 14.7, 100, 7.725, 23.775, 100, -40.45, 29.4, 100, -40.45, -29.4, 100, -20.225, 14.7, 100, -40.45, 29.4, 100, -20.225, -14.7, 100, -20.225, 14.7, 100, -40.45, -29.4, 100, 15.45, -47.55, 100, -20.225, -14.7, 100, -40.45, -29.4, 100, 7.725, -23.775, 100, -20.225, -14.7, 100, 15.45, -47.55, 100, 50, 0, 100, 7.725, -23.775, 100, 15.45, -47.55, 100, 25.0, 0, 100, 7.725, -23.775, 100, 50, 0, 100]);
    this.setAttribute("position", new BufferAttribute(vertices, 3));
    this.calculateNormals();
  }
}
