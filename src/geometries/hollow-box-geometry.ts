import { BufferAttribute } from "./buffer-attribute.ts";
import { BufferGeometry } from "./buffer-geometry.ts";
import { COMMON_ATTRIBUTE } from "src/types/webgl-type.ts";

export class HollowGeometry extends BufferGeometry {
  size: number;

  constructor(size = 1) {
    super();
    this.size = size;

    let vertices = new Float32Array([
      20, 20, 20, 10.0, -10.0, 20, 20, -20, 20, 20, 20, 20, 10.0, 10.0, 20,
      10.0, -10.0, 20, 20, 20, 20, -10.0, 10.0, 20, 10.0, 10.0, 20, 20, 20, 20,
      -20, 20, 20, -10.0, 10.0, 20, -20, 20, 20, -20, -20, 20, -10.0, 10.0, 20,
      -20, -20, 20, -10.0, -10.0, 20, -10.0, 10.0, 20, -10.0, -10.0, 20, -20,
      -20, 20, 10.0, -10.0, 20, -20, -20, 20, 20, -20, 20, 10.0, -10.0, 20,

      20, -20, -20, 10.0, 10.0, -20, 20, 20, -20, 20, -20, -20, 10.0, -10.0,
      -20, 10.0, 10.0, -20, 20, 20, -20, 10.0, 10.0, -20, -20, 20, -20, 10.0,
      10.0, -20, -10.0, 10.0, -20, -20, 20, -20, -20, 20, -20, -10.0, 10.0, -20,
      -20, -20, -20, -10.0, 10.0, -20, -10.0, -10.0, -20, -20, -20, -20, 10.0,
      -10.0, -20, 20, -20, -20, -10.0, -10.0, -20, 20, -20, -20, -20, -20, -20,
      -10.0, -10.0, -20,

      -20, 20, 20, -20, -20, -20, -20, -20, 20, -20, 20, 20, -20, 20, -20, -20,
      -20, -20, 10.0, 10.0, 20, 10.0, 10.0, -20, 10.0, -10.0, 20, 10.0, 10.0,
      -20, 10.0, -10.0, -20, 10.0, -10.0, 20,

      20, -20, 20, 20, -20, -20, 20, 20, 20, 20, -20, -20, 20, 20, -20, 20, 20,
      20, -10.0, 10.0, 20, -10.0, -10.0, 20, -10.0, 10.0, -20, -10.0, -10.0, 20,
      -10.0, -10.0, -20, -10.0, 10.0, -20,

      20, -20, 20, -20, -20, 20, 20, -20, -20, -20, -20, 20, -20, -20, -20, 20,
      -20, -20, -10.0, 10.0, 20, -10.0, 10.0, -20, 10.0, 10.0, 20, -10.0, 10.0,
      -20, 10.0, 10.0, -20, 10.0, 10.0, 20,

      -20, 20, 20, 20, 20, 20, -20, 20, -20, 20, 20, 20, 20, 20, -20, -20, 20,
      -20, -10.0, -10.0, 20, 10.0, -10.0, 20, -10.0, -10.0, -20, 10.0, -10.0,
      20, 10.0, -10.0, -20, -10.0, -10.0, -20,
    ]);

    vertices = vertices.map(el => el * this.size);
    this.setAttribute("position", new BufferAttribute(vertices, 3, COMMON_ATTRIBUTE.ATTRIBUTE_POSITION));
    this.calculateNormals();
  }
}
