import { BufferAttribute } from "./buffer-attribute.ts";
import { BufferGeometry } from "./buffer-geometry.ts";

export class HollowGeometry extends BufferGeometry {
  width: number;
  height: number;
  depth: number;

  // TODO: need to check
  constructor(width = 1, height = 1, depth = 1) {
    super();
    this.width = width;
    this.height = height;
    this.depth = depth;

    const vertices = new Float32Array([
      20, 20, 20, 10.0, -10.0, 20, 20, -20, 20, 20, 20, 20, 10.0, 10.0, 20,
      10.0, -10.0, 20, 20, 20, 20, -10.0, 10.0, 20, 10.0, 10.0, 20, 20, 20, 20,
      -20, 20, 20, -10.0, 10.0, 20, -20, 20, 20, -20, -20, 20, -10.0, 10.0, 20,
      -20, -20, 20, -10.0, -10.0, 20, -10.0, 10.0, 20, -10.0, -10.0, 20, -20,
      -20, 20, 10.0, -10.0, 20, -20, -20, 20, 20, -20, 20, 10.0, -10.0, 20,

      20, -20, -20, 10.0, 10.0, -20, 20, 20, -20, 20, -20, -20, 10.0, -10.0,
      -20, 10.0, 10.0, -20, 20, 20, -20, 10.0, 10.0, -20, -20, 20, -20, 10.0,
      10.0, -20, -10.0, 10.0, -20, -20, 20, -20, -20, 20, -20, -10.0, 10.0, -20,
      -20, -20, -20, -10.0, 10.0, -20, -10.0, -10.0, -20, -20, -20, -20, 10.0,
      -10.0, -20, 20, -20, -20, -10.0, -10.0, -20, 20, -20, -20, -20, -20, -20,
      -10.0, -10.0, -20,

      -20, 20, 20, -20, -20, -20, -20, -20, 20, -20, 20, 20, -20, 20, -20, -20,
      -20, -20, 10.0, 10.0, 20, 10.0, 10.0, -20, 10.0, -10.0, 20, 10.0, 10.0,
      -20, 10.0, -10.0, -20, 10.0, -10.0, 20,

      20, -20, 20, 20, -20, -20, 20, 20, 20, 20, -20, -20, 20, 20, -20, 20, 20,
      20, -10.0, 10.0, 20, -10.0, -10.0, 20, -10.0, 10.0, -20, -10.0, -10.0, 20,
      -10.0, -10.0, -20, -10.0, 10.0, -20,

      20, -20, 20, -20, -20, 20, 20, -20, -20, -20, -20, 20, -20, -20, -20, 20,
      -20, -20, -10.0, 10.0, 20, -10.0, 10.0, -20, 10.0, 10.0, 20, -10.0, 10.0,
      -20, 10.0, 10.0, -20, 10.0, 10.0, 20,

      -20, 20, 20, 20, 20, 20, -20, 20, -20, 20, 20, 20, 20, 20, -20, -20, 20,
      -20, -10.0, -10.0, 20, 10.0, -10.0, 20, -10.0, -10.0, -20, 10.0, -10.0,
      20, 10.0, -10.0, -20, -10.0, -10.0, -20,
    ]);
    this.setAttribute("position", new BufferAttribute(vertices, 3));
    this.calculateNormals();
  }
}
