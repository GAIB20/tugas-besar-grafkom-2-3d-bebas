import { BufferAttribute } from "./buffer-attribute.ts";
import { BufferGeometry } from "./buffer-geometry.ts";
import { COMMON_ATTRIBUTE } from "src/types/webgl-type.ts";

export class HollowGeometry6 extends BufferGeometry {
  constructor() {
    super();

    const vertices = new Float32Array([
      50, 50, 0, 25, 50, 0, 25, 50, 43.3, 25, 50, 43.3, 25, 50, 0, 12.5, 50,
      21.65, 25, 50, 43.3, 12.5, 50, 21.65, -25, 50, 43.3, -25, 50, 43.3, 12.5,
      50, 21.65, -12.5, 50, 21.65, -25, 50, 43.3, -12.5, 50, 21.65, -50, 50, 0,
      -50, 50, 0, -12.5, 50, 21.65, -25, 50, 0, -50, 50, 0, -25, 50, 0, -25, 50,
      -43.3, -25, 50, -43.3, -25, 50, 0, -12.5, 50, -21.65, -25, 50, -43.3,
      -12.5, 50, -21.65, 25, 50, -43.3, 25, 50, -43.3, -12.5, 50, -21.65, 12.5,
      50, -21.65, 25, 50, -43.3, 12.5, 50, -21.65, 50, 50, 0, 50, 50, 0, 12.5,
      50, -21.65, 25, 50, 0,

      25, 50, 0, 50, 50, 0, 25, 50, 43.3, 25, 50, 0, 25, 50, 43.3, 12.5, 50,
      21.65, 12.5, 50, 21.65, 25, 50, 43.3, -25, 50, 43.3, 12.5, 50, 21.65, -25,
      50, 43.3, -12.5, 50, 21.65, -12.5, 50, 21.65, -25, 50, 43.3, -50, 50, 0,
      -12.5, 50, 21.65, -50, 50, 0, -25, 50, 0, -25, 50, 0, -50, 50, 0, -25, 50,
      -43.3, -25, 50, 0, -25, 50, -43.3, -12.5, 50, -21.65, -12.5, 50, -21.65,
      -25, 50, -43.3, 25, 50, -43.3, -12.5, 50, -21.65, 25, 50, -43.3, 12.5, 50,
      -21.65, 12.5, 50, -21.65, 25, 50, -43.3, 50, 50, 0, 12.5, 50, -21.65, 50,
      50, 0, 25, 50, 0,

      50, -50, 0, 25, -50, 0, 25, -50, 43.3, 25, -50, 43.3, 25, -50, 0, 12.5,
      -50, 21.65, 25, -50, 43.3, 12.5, -50, 21.65, -25, -50, 43.3, -25, -50,
      43.3, 12.5, -50, 21.65, -12.5, -50, 21.65, -25, -50, 43.3, -12.5, -50,
      21.65, -50, -50, 0, -50, -50, 0, -12.5, -50, 21.65, -25, -50, 0, -50, -50,
      0, -25, -50, 0, -25, -50, -43.3, -25, -50, -43.3, -25, -50, 0, -12.5, -50,
      -21.65, -25, -50, -43.3, -12.5, -50, -21.65, 25, -50, -43.3, 25, -50,
      -43.3, -12.5, -50, -21.65, 12.5, -50, -21.65, 25, -50, -43.3, 12.5, -50,
      -21.65, 50, -50, 0, 50, -50, 0, 12.5, -50, -21.65, 25, -50, 0,

      25, -50, 0, 50, -50, 0, 25, -50, 43.3, 25, -50, 0, 25, -50, 43.3, 12.5,
      -50, 21.65, 12.5, -50, 21.65, 25, -50, 43.3, -25, -50, 43.3, 12.5, -50,
      21.65, -25, -50, 43.3, -12.5, -50, 21.65, -12.5, -50, 21.65, -25, -50,
      43.3, -50, -50, 0, -12.5, -50, 21.65, -50, -50, 0, -25, -50, 0, -25, -50,
      0, -50, -50, 0, -25, -50, -43.3, -25, -50, 0, -25, -50, -43.3, -12.5, -50,
      -21.65, -12.5, -50, -21.65, -25, -50, -43.3, 25, -50, -43.3, -12.5, -50,
      -21.65, 25, -50, -43.3, 12.5, -50, -21.65, 12.5, -50, -21.65, 25, -50,
      -43.3, 50, -50, 0, 12.5, -50, -21.65, 50, -50, 0, 25, -50, 0,

      50, 50, 0, 50, -50, 0, 25, 50, 43.3, 25, 50, 43.3, 50, -50, 0, 25, -50,
      43.3, 25, 50, 43.3, 25, -50, 43.3, -25, 50, 43.3, -25, 50, 43.3, 25, -50,
      43.3, -25, -50, 43.3, -25, 50, 43.3, -25, -50, 43.3, -50, 50, 0, -50, 50,
      0, -25, -50, 43.3, -50, -50, 0, -50, 50, 0, -50, -50, 0, -25, 50, -43.3,
      -25, 50, -43.3, -50, -50, 0, -25, -50, -43.3, -25, 50, -43.3, -25, -50,
      -43.3, 25, 50, -43.3, 25, 50, -43.3, -25, -50, -43.3, 25, -50, -43.3, 25,
      50, -43.3, 25, -50, -43.3, 50, 50, 0, 50, 50, 0, 25, -50, -43.3, 50, -50,
      0,

      50, -50, 0, 50, 50, 0, 25, -50, 43.3, 50, 50, 0, 25, 50, 43.3, 25, -50,
      43.3, 25, -50, 43.3, 25, 50, 43.3, -25, -50, 43.3, 25, 50, 43.3, -25, 50,
      43.3, -25, -50, 43.3, -25, -50, 43.3, -25, 50, 43.3, -50, -50, 0, -25, 50,
      43.3, -50, 50, 0, -50, -50, 0, -50, -50, 0, -50, 50, 0, -25, -50, -43.3,
      -50, 50, 0, -25, 50, -43.3, -25, -50, -43.3, -25, -50, -43.3, -25, 50,
      -43.3, 25, -50, -43.3, -25, 50, -43.3, 25, 50, -43.3, 25, -50, -43.3, 25,
      -50, -43.3, 25, 50, -43.3, 50, -50, 0, 25, 50, -43.3, 50, 50, 0, 50, -50,
      0,

      37.5, 50, 0, 37.5, -50, 0, 18.75, 50, 32.475, 18.75, 50, 32.475, 37.5,
      -50, 0, 18.75, -50, 32.475, 18.75, 50, 32.475, 18.75, -50, 32.475, -18.75,
      50, 32.475, -18.75, 50, 32.475, 18.75, -50, 32.475, -18.75, -50, 32.475,
      -18.75, 50, 32.475, -18.75, -50, 32.475, -37.5, 50, 0, -37.5, 50, 0,
      -18.75, -50, 32.475, -37.5, -50, 0, -37.5, 50, 0, -37.5, -50, 0, -18.75,
      50, -32.475, -18.75, 50, -32.475, -37.5, -50, 0, -18.75, -50, -32.475,
      -18.75, 50, -32.475, -18.75, -50, -32.475, 18.75, 50, -32.475, 18.75, 50,
      -32.475, -18.75, -50, -32.475, 18.75, -50, -32.475, 18.75, 50, -32.475,
      18.75, -50, -32.475, 37.5, 50, 0, 37.5, 50, 0, 18.75, -50, -32.475, 37.5,
      -50, 0,

      37.5, -50, 0, 37.5, 50, 0, 18.75, -50, 32.475, 37.5, 50, 0, 18.75, 50,
      32.475, 18.75, -50, 32.475, 18.75, -50, 32.475, 18.75, 50, 32.475, -18.75,
      -50, 32.475, 18.75, 50, 32.475, -18.75, 50, 32.475, -18.75, -50, 32.475,
      -18.75, -50, 32.475, -18.75, 50, 32.475, -37.5, -50, 0, -18.75, 50,
      32.475, -37.5, 50, 0, -37.5, -50, 0, -37.5, -50, 0, -37.5, 50, 0, -18.75,
      -50, -32.475, -37.5, 50, 0, -18.75, 50, -32.475, -18.75, -50, -32.475,
      -18.75, -50, -32.475, -18.75, 50, -32.475, 18.75, -50, -32.475, -18.75,
      50, -32.475, 18.75, 50, -32.475, 18.75, -50, -32.475, 18.75, -50, -32.475,
      18.75, 50, -32.475, 37.5, -50, 0, 18.75, 50, -32.475, 37.5, 50, 0, 37.5,
      -50, 0,
    ]);

    this.setAttribute("position", new BufferAttribute(vertices, 3, COMMON_ATTRIBUTE.ATTRIBUTE_POSITION));
    this.calculateNormals();
  }
}
